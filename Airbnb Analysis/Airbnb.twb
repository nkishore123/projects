<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0605.1023                               -->
<workbook original-version='18.1' source-build='2021.2.0 (20212.21.0605.1023)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='simplified_airbnb' inline='true' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='simplified_airbnb' name='textscan.03h4ypa10ro8v715gpc071lchwsd'>
            <connection class='textscan' directory='C:/Users/kisho/Datasets' filename='simplified_airbnb.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.03h4ypa10ro8v715gpc071lchwsd' name='simplified_airbnb.csv' table='[simplified_airbnb#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='string' name='property_type' ordinal='2' />
            <column datatype='string' name='room_type' ordinal='3' />
            <column datatype='string' name='bed_type' ordinal='4' />
            <column datatype='real' name='bedrooms' ordinal='5' />
            <column datatype='real' name='beds' ordinal='6' />
            <column datatype='integer' name='number_of_reviews' ordinal='7' />
            <column datatype='real' name='bathrooms' ordinal='8' />
            <column datatype='real' name='price' ordinal='9' />
            <column datatype='real' name='cleaning_fee' ordinal='10' />
            <column datatype='integer' name='host_id' ordinal='11' />
            <column datatype='string' name='host_name' ordinal='12' />
            <column datatype='string' name='host_neighbourhood' ordinal='13' />
            <column datatype='string' name='country' ordinal='14' />
            <column datatype='real' name='review_scores_rating' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.03h4ypa10ro8v715gpc071lchwsd' name='simplified_airbnb.csv' table='[simplified_airbnb#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='name' ordinal='1' />
            <column datatype='string' name='property_type' ordinal='2' />
            <column datatype='string' name='room_type' ordinal='3' />
            <column datatype='string' name='bed_type' ordinal='4' />
            <column datatype='real' name='bedrooms' ordinal='5' />
            <column datatype='real' name='beds' ordinal='6' />
            <column datatype='integer' name='number_of_reviews' ordinal='7' />
            <column datatype='real' name='bathrooms' ordinal='8' />
            <column datatype='real' name='price' ordinal='9' />
            <column datatype='real' name='cleaning_fee' ordinal='10' />
            <column datatype='integer' name='host_id' ordinal='11' />
            <column datatype='string' name='host_name' ordinal='12' />
            <column datatype='string' name='host_neighbourhood' ordinal='13' />
            <column datatype='string' name='country' ordinal='14' />
            <column datatype='real' name='review_scores_rating' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>property_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[property_type]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>property_type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>room_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[room_type]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>room_type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bed_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bed_type]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>bed_type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bedrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bedrooms]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>bedrooms</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beds</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beds]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>beds</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number_of_reviews</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number_of_reviews]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>number_of_reviews</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bathrooms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bathrooms]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>bathrooms</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cleaning_fee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cleaning_fee]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>cleaning_fee</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[host_id]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>host_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_name]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>host_name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>host_neighbourhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[host_neighbourhood]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>host_neighbourhood</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>review_scores_rating</remote-name>
            <remote-type>5</remote-type>
            <local-name>[review_scores_rating]</local-name>
            <parent-name>[simplified_airbnb.csv]</parent-name>
            <remote-alias>review_scores_rating</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[__tableau_internal_object_id__].[cnt:simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E:qk]&quot;' value='Count' />
          <alias key='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:number_of_reviews:qk]&quot;' value='Avg. No.of Reviews' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='simplified_airbnb.csv' datatype='table' name='[__tableau_internal_object_id__].[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]' role='measure' type='quantitative' />
      <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
      <column caption='Bed Type' datatype='string' name='[bed_type]' role='dimension' type='nominal' />
      <column caption='Bedrooms' datatype='real' name='[bedrooms]' role='measure' type='quantitative' />
      <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
      <column caption='Cleaning Fee' datatype='real' name='[cleaning_fee]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Host Id' datatype='integer' name='[host_id]' role='dimension' type='ordinal' />
      <column caption='Host Name' datatype='string' name='[host_name]' role='dimension' type='nominal' />
      <column caption='Host Neighbourhood' datatype='string' name='[host_neighbourhood]' role='dimension' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
      <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
      <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
      <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
      <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bathrooms]' derivation='Avg' name='[avg:bathrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[beds]' derivation='Avg' name='[avg:beds:qk]' pivot='key' type='quantitative' />
      <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
      <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[beds]' derivation='Sum' name='[sum:beds:qk]' pivot='key' type='quantitative' />
      <group caption='Tooltip (Host Neighbourhood,Room Type)' hidden='true' name='[Tooltip (Host Neighbourhood,Room Type)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[host_neighbourhood]' />
          <groupfilter function='level-members' level='[room_type]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:bedrooms:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:beds:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:room_type:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;Private room&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Shared room&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Entire home/apt&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='simplified_airbnb.csv' id='simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E'>
            <properties context=''>
              <relation connection='textscan.03h4ypa10ro8v715gpc071lchwsd' name='simplified_airbnb.csv' table='[simplified_airbnb#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='name' ordinal='1' />
                  <column datatype='string' name='property_type' ordinal='2' />
                  <column datatype='string' name='room_type' ordinal='3' />
                  <column datatype='string' name='bed_type' ordinal='4' />
                  <column datatype='real' name='bedrooms' ordinal='5' />
                  <column datatype='real' name='beds' ordinal='6' />
                  <column datatype='integer' name='number_of_reviews' ordinal='7' />
                  <column datatype='real' name='bathrooms' ordinal='8' />
                  <column datatype='real' name='price' ordinal='9' />
                  <column datatype='real' name='cleaning_fee' ordinal='10' />
                  <column datatype='integer' name='host_id' ordinal='11' />
                  <column datatype='string' name='host_name' ordinal='12' />
                  <column datatype='string' name='host_neighbourhood' ordinal='13' />
                  <column datatype='string' name='country' ordinal='14' />
                  <column datatype='real' name='review_scores_rating' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Beds'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column-instance column='[beds]' derivation='Avg' name='[avg:beds:qk]' pivot='key' type='quantitative' />
            <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
            <column caption='Host Neighbourhood' datatype='string' name='[host_neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_neighbourhood]' derivation='None' name='[none:host_neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Tooltip (Host Neighbourhood,Room Type)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Avg Beds]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[host_neighbourhood]' />
              <groupfilter function='level-members' level='[room_type]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Tooltip (Host Neighbourhood,Room Type)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]' />
              <lod column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]</rows>
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]</cols>
      </table>
      <simple-id uuid='{3921346F-F0EF-4AA5-A49E-BF2A8C08554A}' />
    </worksheet>
    <worksheet name='Avg Price Vs Property Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
              <size column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:property_type:nk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{25E0090A-1D0D-497A-A7F9-B5B6D22E3030}' />
    </worksheet>
    <worksheet name='Avg Price on Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' palette='red_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
              <geometry column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Geometry (generated)]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Latitude (generated)]</rows>
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B8D674BF-7A06-4279-B273-E044C0C183CA}' />
    </worksheet>
    <worksheet name='Avg Price vs Neighbourhood'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column caption='Host Neighbourhood' datatype='string' name='[host_neighbourhood]' role='dimension' type='nominal' />
            <column-instance column='[host_neighbourhood]' derivation='None' name='[none:host_neighbourhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[room_type]' derivation='None' name='[none:room_type:nk]' pivot='key' type='nominal' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Room Type' datatype='string' name='[room_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:host_neighbourhood:nk]' />
              <groupfilter function='member' level='[none:host_neighbourhood:nk]' member='&quot;Nossa Senhora de Fátima&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' />
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Host Neighbourhood:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Room Type:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Price:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[<Sheet name="Avg Beds" maxwidth="300" maxheight="300" filter="<All Fields>">]]></run>
                <run>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]</rows>
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]</cols>
      </table>
      <simple-id uuid='{0F0C8F7E-6C8C-48C6-A17B-0F596666C780}' />
    </worksheet>
    <worksheet name='Bedroom&amp;Bathrooms'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column-instance column='[bathrooms]' derivation='Avg' name='[avg:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='real' name='[bedrooms]' role='measure' type='quantitative' />
            <column-instance column='[property_type]' derivation='None' name='[none:property_type:nk]' pivot='key' type='nominal' />
            <column caption='Property Type' datatype='string' name='[property_type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk] + [federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk])</rows>
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:property_type:nk]</cols>
      </table>
      <simple-id uuid='{3411792A-0055-435F-9A98-826559752846}' />
    </worksheet>
    <worksheet name='Beds vs Bedrooms'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <column caption='Bedrooms' datatype='real' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[bedrooms]' derivation='Sum' name='[sum:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beds]' derivation='Sum' name='[sum:beds:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:beds:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:bedrooms:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:beds:qk]' scope='rows' value='false' />
            <format attr='height' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:bedrooms:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:beds:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:bedrooms:qk] + [federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:beds:qk])</rows>
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{13A274E5-A671-4ACE-9FA8-2758403D75C9}' />
    </worksheet>
    <worksheet name='Fees'>
      <table>
        <view>
          <datasources>
            <datasource caption='simplified_airbnb' name='federated.0mq3ynq0wcv6x9132th0q1a1ti7q' />
          </datasources>
          <datasource-dependencies datasource='federated.0mq3ynq0wcv6x9132th0q1a1ti7q'>
            <_.fcp.ObjectModelTableType.false...column caption='simplified_airbnb.csv' datatype='integer' name='[__tableau_internal_object_id__].[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='simplified_airbnb.csv' datatype='table' name='[__tableau_internal_object_id__].[simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E]' role='measure' type='quantitative' />
            <column-instance column='[bathrooms]' derivation='Avg' name='[avg:bathrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bedrooms]' derivation='Avg' name='[avg:bedrooms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beds]' derivation='Avg' name='[avg:beds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cleaning_fee]' derivation='Avg' name='[avg:cleaning_fee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[number_of_reviews]' derivation='Avg' name='[avg:number_of_reviews:qk]' pivot='key' type='quantitative' />
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Avg' name='[avg:review_scores_rating:qk]' pivot='key' type='quantitative' />
            <column caption='Bathrooms' datatype='real' name='[bathrooms]' role='measure' type='quantitative' />
            <column caption='Bedrooms' datatype='real' name='[bedrooms]' role='measure' type='quantitative' />
            <column caption='Beds' datatype='real' name='[beds]' role='measure' type='quantitative' />
            <column caption='Cleaning Fee' datatype='real' name='[cleaning_fee]' role='measure' type='quantitative' />
            <column caption='Number Of Reviews' datatype='integer' name='[number_of_reviews]' role='measure' type='quantitative' />
            <column caption='Price' datatype='real' name='[price]' role='measure' type='quantitative' />
            <column caption='Review Scores Rating' datatype='real' name='[review_scores_rating]' role='measure' type='quantitative' />
            <column-instance column='[review_scores_rating]' derivation='Sum' name='[sum:review_scores_rating:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:cleaning_fee:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[__tableau_internal_object_id__].[cnt:simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:number_of_reviews:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:review_scores_rating:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bathrooms:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:beds:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:cleaning_fee:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[__tableau_internal_object_id__].[cnt:simplified_airbnb.csv_B336976CA9A74BF0A87FA292D299C42E:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:number_of_reviews:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]&quot;</bucket>
              <bucket>&quot;[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:review_scores_rating:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='171' />
            <format attr='height' value='64' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='#ffaaff' />
            <format attr='height' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='40' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='10' />
            <format attr='font-weight' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='bold' />
            <format attr='color' field='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Multiple Values]' />
              <lod column='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='12'>&lt;</run>
                <run bold='true' fontsize='12'>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[Multiple Values]</run>
                <run bold='true' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B4BB5ABF-3BD9-4952-ABED-1EEEA695EDBF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='7' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='30' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='27' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='22' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='98222' id='15' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                  <zone h='98222' id='10' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                    <zone h='98222' id='8' type-v2='layout-basic' w='99000' x='500' y='889' />
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='14222' id='3' param='horz' type-v2='layout-flow' w='89375' x='63' y='222'>
          <zone h='12556' id='4' name='Fees' show-title='false' w='89375' x='63' y='222'>
            <layout-cache fixed-size-h='105' fixed-size-w='1369' type-h='fixed' type-w='fixed' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='47556' id='5' param='horz' type-v2='layout-flow' w='47125' x='188' y='12667'>
          <zone h='47556' id='6' name='Avg Price on Country' w='47125' x='188' y='12667'>
            <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='9778' id='11' name='Avg Price on Country' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type-v2='color' w='8750' x='33625' y='12667' />
        <zone h='47556' id='12' param='horz' type-v2='layout-flow' w='52438' x='47438' y='12444'>
          <zone h='47556' id='13' name='Avg Price vs Neighbourhood' w='52438' x='47438' y='12444'>
            <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='9444' id='16' name='Avg Price vs Neighbourhood' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' type-v2='color' w='8938' x='84688' y='13222' />
        <zone h='39889' id='17' param='horz' type-v2='layout-flow' w='33250' x='438' y='59889'>
          <zone h='39889' id='18' name='Avg Price Vs Property Type' w='33250' x='438' y='59889'>
            <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='38889' id='19' param='horz' type-v2='layout-flow' w='34813' x='33625' y='60111'>
          <zone h='38889' id='20' name='Bedroom&amp;Bathrooms' w='34813' x='33625' y='60111'>
            <layout-cache cell-count-w='36' minheight='271' non-cell-size-w='1' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='7111' id='23' name='Bedroom&amp;Bathrooms' pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type-v2='color' w='8750' x='58438' y='61000' />
        <zone h='37889' id='24' param='horz' type-v2='layout-flow' w='31500' x='68313' y='60222'>
          <zone h='37889' id='25' name='Beds vs Bedrooms' w='31500' x='68313' y='60222'>
            <layout-cache cell-count-w='9' minheight='263' non-cell-size-w='1' type-h='scalable' type-w='cell' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='7111' id='28' name='Beds vs Bedrooms' pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type-v2='color' w='8750' x='88938' y='60667' />
        <zone h='9778' id='31' name='Avg Price Vs Property Type' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type-v2='color' w='8750' x='24000' y='59667' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='32' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='105' h='12556' id='4' is-fixed='true' name='Fees' show-title='false' w='89375' x='63' y='222'>
                  <layout-cache fixed-size-h='105' fixed-size-w='1369' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47556' id='13' is-fixed='true' name='Avg Price vs Neighbourhood' w='52438' x='47438' y='12444'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9444' id='16' name='Avg Price vs Neighbourhood' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' type-v2='color' w='8938' x='84688' y='13222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47556' id='6' is-fixed='true' name='Avg Price on Country' w='47125' x='188' y='12667'>
                  <layout-cache minwidth='202' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9778' id='11' name='Avg Price on Country' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type-v2='color' w='8750' x='33625' y='12667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39889' id='18' is-fixed='true' name='Avg Price Vs Property Type' w='33250' x='438' y='59889'>
                  <layout-cache cell-count-w='1' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9778' id='31' name='Avg Price Vs Property Type' pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type-v2='color' w='8750' x='24000' y='59667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38889' id='20' is-fixed='true' name='Bedroom&amp;Bathrooms' w='34813' x='33625' y='60111'>
                  <layout-cache cell-count-w='36' minheight='271' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7111' id='23' name='Bedroom&amp;Bathrooms' pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type-v2='color' w='8750' x='58438' y='61000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37889' id='25' is-fixed='true' name='Beds vs Bedrooms' w='31500' x='68313' y='60222'>
                  <layout-cache cell-count-w='9' minheight='263' non-cell-size-w='1' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7111' id='28' name='Beds vs Bedrooms' pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type-v2='color' w='8750' x='88938' y='60667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F3F9B858-5883-4391-BF38-ED92594DD2D7}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Avg Beds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]</field>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]</field>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3426E44C-2FCA-4CA2-9393-780B04F1C575}' />
    </window>
    <window class='worksheet' name='Avg Price Vs Property Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:property_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6F0E3A1-9353-4259-B231-472376800AEC}' />
    </window>
    <window class='worksheet' name='Avg Price vs Neighbourhood'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:host_neighbourhood:nk]</field>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D81B99C-DBE0-4825-82E9-3F57288DFF9D}' />
    </window>
    <window class='worksheet' name='Avg Price on Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8A4D5CA1-1709-4AA4-8A37-C12ACC670F92}' />
    </window>
    <window class='worksheet' name='Bedroom&amp;Bathrooms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[avg:bedrooms:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:property_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C12EB2E7-E200-4DD1-8B42-27FD5B732460}' />
    </window>
    <window class='worksheet' name='Beds vs Bedrooms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[sum:bedrooms:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{44A80387-990C-45A6-839B-5E6DD351CBD0}' />
    </window>
    <window class='worksheet' name='Fees'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1088A0FE-B3E9-4F89-A12D-614CA6CAAA82}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg Price Vs Property Type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Price on Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Price vs Neighbourhood'>
          <highlight>
            <color-one-way>
              <field>[federated.0mq3ynq0wcv6x9132th0q1a1ti7q].[none:room_type:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Bedroom&amp;Bathrooms'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Beds vs Bedrooms'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Fees' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{54EA6A2C-2418-4FEA-B41C-D8A487869F5C}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Beds' width='192'>
      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
      QaBj8kZO6gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Price Vs Property Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAWxklEQVR4nO3d2XMb55rf8W830NiIhSBIUNz3TRQXSbaOZcuSp6YymUxVplKpSiWZLJf5
      h3KR1FRSlcpVKlMzUzlnzpmxj2151WItXESKpLgTJEFww74D3bmgTVvHlEXzSIKJfj5XItiv
      6mkWfniXbrytGIZhIIRJqZUuQIhKkgAIU7M+91NqF1I7FSpFVITFTs7RgKGXK13JK6Na7ZTL
      pVMd+3wAkjuw/eh11CR+qWwecv4R9FKx0pW8MhaXj0I+d6pjZQgkTO3EABSKJbL5AslMDl1/
      fpEonc1TKJ6ue0llXp7CRCoLQDZfILwfI5l+vo1hGKSzeaLJ9PFr6+EDymX9VDWI00smUxiG
      QTKZeuExmUyWUvl8DJdyuTxT0zMkkskXHmM96cXIYYJUJsdeNMlwTwvTi5tcHmgnFDnErlnJ
      FYrcmVriL29dZm51m+ujPcwub2OxqAT9Hrb2Ylwb7uKb2VVUVeHti108nl+noynA3336iL+8
      eZlYKkOtx8VSaJc/e2eYu9PLXB/t4f7MCvW1HhLpLKO9rdx9sozDrtEa9BPei5MrFGmqr2V2
      ZYvRvrbX9sczo4eT03xw4zqPpp7Q1tJMMpViOxzB5XQy2N/DxuY2VquF7s52an2+Spf7UjuR
      CAD37j+kp7uTfL6A1+thI7TJpeEhJqdmTg6AYRh8PbVEoVhiP5ZCVRUezq2BYeD31uD31jA+
      0E4yk+MgnuL2wwVagrVEDhJMPQuhqgqXelpQFIWhzmZ+8+Uk74328XR1m4vdLXjdTj558JSA
      z43b5QCgWCpjUY86pPB+DJ/byb2ZFd651M3T1TCLG7tYLSqzK9v8l399i6crW2/mr2gi8XiC
      21/eJZFIUC6V8ft92Gw2Lo8N8+EnnwMKDYG6Spd5aoZhMLfwjJ7uTr78+i5Op5PWlmY6O9qZ
      m39GKpU6OQB2m8afXrtILJlGVRQ2d6N0XAhg0yxk80VqnHY2d6OUyjouh52Ar4bVrX3i6Swd
      TQF03cCmWQn4aqhx2uhvv8CjuTUaA16y+SL7sSR1PjddLfUUikfdqaoqAHhcDjSrBZtmxaZZ
      +XJykQsBH94aB/uxJLUeJ/FkBp/b9eb+kibR1trMlbERHk/NkEym2InsMTTQx8T0LK3NTeQL
      BeoDdVgslkqXeioOh52bN96l6UIj0Wgcr9eD1+uhpsaF1+MhlUqjPHclODx9plWgYqnM548X
      qPPWcGWw40zFxpIZ0rk8LQ3+lx67uBGhoymATTsxv+LnsHmImXgV6JUEQJxjJg/AiR+hqWye
      u1NLdDTX09/eyGIowtr2PtdHergzvUxvW5B0Ns9+LMUHVwdQFOWVnoCojMkns0R29xka6GVp
      eY2Bvh5UVSEWTzA00Ffp8n62eCKBRVXZiezS29N94jEnLoParBauXepmI7yPYRgsb+7S0xrk
      7z+bYLi7mSdLm2ztRqlx2tnej73WkxBvzvjIMB6Pm43QFlcvjzL9dA6rZiUc2a10aWcSjyf4
      +PYXOBwOvvjqDp9/+TULi0vcufcNE1NP+OyLr04OQK5Q5M70EjevHH2697Y28mB2lYtdTcyv
      hUmmc7Q21vFkMXS8ciPOv0w2i6ooXB0fZWJ6hmw2R0MgcK57eF3XyeVyWK1WVFUlehhlfHSE
      qeknFEulkwNwEE+BAc/Wd3j4dJWyrtNY52Wws4myrvPBW4OUyzqDXU001nnf9DmJ1ySZTDE6
      PISu6+i6zo13rvF4aoZ4IkkqnX75f/AL4/N5+Wd/+gG6bmC323E5nXR0tGO327h6eRyPu+an
      J8GGYWAYBqp8ylcvmQS/mKIo57r7E+JlZCFdVK39gwO+vnuf8dERVtc3KOTzDF8cYm7+Gc1N
      F7g4NCABENUrny9gt9mJxeM4HQ7cNTUE6vwEg/Vo315ElQCIqmWz2bg8PsLk1My381iDhcUl
      VEWlvf3oRkoJgKha/lofcwvP+ODmeyRTaYrFAqpqYWtrm1gsTmOwQQIgqpfVamVk+CIAdrv9
      +PXGYMPxv2V9U5iaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRA
      mJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJia
      BECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRAmJoEQJiaBECYmgRA
      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
      /x8j8qhWu5ArEQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Avg Price on Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Avg Price vs Neighbourhood' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Bedroom&amp;Bathrooms' width='192'>
      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
      /n+Edlc9+zmkuwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Beds vs Bedrooms' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      6AmeJP8fc7HTFJeXO3QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='72' name='Fees' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
